
import { supabase } from "@/integrations/supabase/client";
import { toast } from "sonner";

export const useProgramWorkoutCompletions = () => {
  const createWorkoutCompletions = async (
    assignmentId: string,
    userId: string,
    programId: string,
    trainingDates: string[],
    programStructure: any
  ) => {
    console.log('üìÖ Creating workout completions for:', {
      assignmentId,
      userId,
      programId,
      trainingDates: trainingDates.length,
      programStructure
    });

    try {
      const completions = [];
      
      // Œ†Œ±ŒØœÅŒΩŒøœÖŒºŒµ œÑŒπœÇ Œ∑ŒºŒ≠œÅŒµœÇ Œ±œÄœå œÑŒ∑ŒΩ œÄœÅœéœÑŒ∑ ŒµŒ≤Œ¥ŒøŒºŒ¨Œ¥Œ±
      const programWeeks = programStructure.weeks || [];
      if (programWeeks.length === 0) {
        throw new Error('Œ§Œø œÄœÅœåŒ≥œÅŒ±ŒºŒºŒ± Œ¥ŒµŒΩ Œ≠œáŒµŒπ ŒµŒ≤Œ¥ŒøŒºŒ¨Œ¥ŒµœÇ');
      }

      const firstWeek = programWeeks[0];
      const daysInWeek = firstWeek.program_days || [];
      
      console.log('üìã Using program structure:', {
        totalWeeks: programWeeks.length,
        daysPerWeek: daysInWeek.length
      });

      // ŒîŒ∑ŒºŒπŒøœÖœÅŒ≥ŒøœçŒºŒµ completions Œ≥ŒπŒ± Œ∫Œ¨Œ∏Œµ Œ∑ŒºŒµœÅŒøŒºŒ∑ŒΩŒØŒ± œÄœÅŒøœÄœåŒΩŒ∑œÉŒ∑œÇ
      trainingDates.forEach((scheduledDate, index) => {
        // ŒöœÖŒ∫ŒªŒπŒ∫ŒÆ ŒµœÄŒ±ŒΩŒ¨ŒªŒ∑œàŒ∑ œÑœâŒΩ Œ∑ŒºŒµœÅœéŒΩ
        const dayIndex = index % daysInWeek.length;
        const dayNumber = dayIndex + 1; // day_number ŒæŒµŒ∫ŒπŒΩŒ¨ŒµŒπ Œ±œÄœå 1
        
        // Œ•œÄŒøŒªŒøŒ≥ŒØŒ∂ŒøœÖŒºŒµ œÉŒµ œÄŒøŒπŒ± ŒµŒ≤Œ¥ŒøŒºŒ¨Œ¥Œ± ŒµŒØŒºŒ±œÉœÑŒµ
        const weekNumber = Math.floor(index / daysInWeek.length) + 1;

        console.log(`üìÖ Date ${index + 1}: ${scheduledDate} -> Week ${weekNumber}, Day ${dayNumber}`);
        
        completions.push({
          assignment_id: assignmentId,
          user_id: userId,
          program_id: programId,
          week_number: weekNumber,
          day_number: dayNumber,
          scheduled_date: scheduledDate,
          completed_date: null, // Null Œ≥ŒπŒ± ŒºŒ∑ ŒøŒªŒøŒ∫ŒªŒ∑œÅœâŒºŒ≠ŒΩŒµœÇ œÄœÅŒøœÄŒøŒΩŒÆœÉŒµŒπœÇ
          status: 'pending', // ŒßœÅŒ∑œÉŒπŒºŒøœÄŒøŒπŒøœçŒºŒµ 'pending' Œ±ŒΩœÑŒØ Œ≥ŒπŒ± 'scheduled'
          status_color: 'blue',
          notes: null,
          start_time: null,
          end_time: null,
          actual_duration_minutes: null
        });
      });

      console.log('üíæ Inserting workout completions as pending:', completions);

      if (completions.length > 0) {
        const { data, error } = await supabase
          .from('workout_completions')
          .insert(completions)
          .select();

        if (error) {
          console.error('‚ùå Error creating workout completions:', error);
          throw error;
        }

        console.log('‚úÖ Workout completions created successfully as pending:', data);
        return data;
      }

      return [];
    } catch (error) {
      console.error('‚ùå Error in createWorkoutCompletions:', error);
      throw error;
    }
  };

  return {
    createWorkoutCompletions
  };
};
